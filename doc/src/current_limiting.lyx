#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Current-Limiting Motor Control
\end_layout

\begin_layout Author
Chris Gerth - Jeremy Lee - FRC 1736 Robot Casserole
\end_layout

\begin_layout Date
v1.0
\end_layout

\begin_layout Abstract
A method for limiting motor voltage commands is presented.
 The target controlled variable is system voltage - too much current draw
 from the motors will lower system voltage to an unacceptable level.
 This limiting is achieved through calculations involving an adaptive observer
 plant model which estimates battery parameters in real time, and projections
 of current draw from motors.
 
\end_layout

\begin_layout Abstract
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Abstract
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Abstract
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Problem Statement, Constraints, and Assumptions
\begin_inset CommandInset label
LatexCommand label
name "part:Problem-Statement,-Constraints,"

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
A brownout is the undesired shutdown of various electrical components due
 to low system voltage.
 We will show an algorithm to prevent brownouts.
 The algorithm is based in the underlying physics of the electrical components,
 and should provide optimum performance of the drivetrain.
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
Most brownouts occur due to transient current spikes from collisions or
 sudden changes in driver commands.
 These current draw spikes in turn drop system voltage to an unacceptably
 low level.
 Our algorithm involves calculating crucial parameters which define battery
 performance under load.
 This is combined with estimated motor current to limit the load applied
 to a battery.
 Our method allows for optimal mechanical design of the robot, but actively
 ensures system voltage does not drop below a preset minimum threshold (referred
 to herein as 
\begin_inset Formula $V_{sys,min}$
\end_inset

).
 By limiting the system voltage drop in software, the robot can be designed
 to be arbitrarily powerful and aggressively-geared - the software will
 maintain best-cases performance without over-taxing the battery.
 In the ideal case, the algorithm only requires a preset 
\begin_inset Formula $V_{sys,min}$
\end_inset

 limit (along with a few well-known physical parameters of the motors).
 It is guaranteed to always run the hardware and electronics at their physical
 limits, and not impose additional 
\begin_inset Quotes eld
\end_inset

tuning
\begin_inset Quotes erd
\end_inset

 constraints seen by other algorithms.
\end_layout

\begin_layout Section
Basic Steps of the Algorithm
\begin_inset CommandInset label
LatexCommand label
name "sec:Basic-Steps"

\end_inset


\end_layout

\begin_layout Standard
Limiting system voltage drop involves a multi-step process.
 The basic algorithm is:
\end_layout

\begin_layout Enumerate
Estimate time-varying battery performance parameters.
\end_layout

\begin_layout Enumerate
Measure motor speeds from each large motor.
\end_layout

\begin_layout Enumerate
Determine the driver requested voltages for each large motor.
\end_layout

\begin_layout Enumerate
Estimate the current draw 
\series bold
if 
\series default
the driver demanded voltages were sent to the motors on this time-step.
\end_layout

\begin_layout Enumerate
Estimate the system voltage given the estimated current draw.
\end_layout

\begin_layout Enumerate

\series bold
If
\series default
 the estimated system voltage is below the preset threshold 
\begin_inset Formula $V_{sys,min}$
\end_inset

, calculate a scaling factor for the driver-demanded voltages which will
 hold 
\begin_inset Formula $V_{sys}$
\end_inset

at 
\begin_inset Formula $V_{sys,min}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
Else, 
\series default
set the driver-demanded voltage to the motor (no limiting)
\end_layout

\begin_layout Section
Existing Solutions
\end_layout

\begin_layout Standard
Mechanical-based solutions for preventing brownouts involve using fewer
 large motors, minimizing stall conditions via lowering coefficients of
 friction, or increasing the gear ratio to slow the whole system down.
 All of these mitigation can reduce overall robot performance.
\end_layout

\begin_layout Standard
Multiple software solutions to reduce the effects of system voltage drop
 also exist.
 The most common perhaps is to simply limit the maximum rate-of-change of
 a motor command, effectively low-pass filtering the signal.
 Fewer extreme changes in applied motor voltage tends to reduce current
 draw.
 Another low-bar software solution for limiting system voltage drop is to
 monitor either the system voltage or battery current draw, and reducing
 all motor commands as a preset limit is neared.
 Any of these may work in many cases.
 We seek to provide an improved algorithm which would work in more cases.
 Additionally, the physics-based nature of the algorithm should push toward
 the maximum possible performance of the robot (constrained by a minimum
 allowable system voltage).
\end_layout

\begin_layout Section
Typical Electrical System Description
\end_layout

\begin_layout Standard
During FRC robotics competitions, there are many constraints on the set
 of electrical components which may be used.
 The construction of an ever-more-powerful drivetrain is inherently limited
 by these component constraints, as arbitrarily more-powerful motors and
 energy sources cannot be used.
 A common combination of components involves the FR801-001 2.5
\begin_inset Quotes erd
\end_inset

 CIM motor and the MK ES17-12 battery.
 There are a maximum of six CIM motors used to power all mechanisms.
 The motors are fed by electronic PWM controllers, where voltage is the
 commanded parameter.
 CIM motors can pull upwards of 120A at stall.
 Six stalled CIM motors is more than enough to cause controller brownout
 due to current-draw-induced voltage drop.
 Even at non-stall conditions, allowing the motors to draw excessive current
 can quickly pull down system voltage.
 
\end_layout

\begin_layout Standard
For the purposes of this paper, a six-CIM tank drive platform is assumed.
 This means two sets of three-motor drivetrains with a single gear ratio
 from motor to wheel, which apply force on the left and right sides of a
 rigid frame.
 Rotation is accomplished by driving the wheels at different speeds.
 Other current draw sources are negligible compared to the drivetrain.
 However, the algorithms described herein can be adapted to other drive
 platforms.
\end_layout

\begin_layout Section
Technical Prerequisites
\end_layout

\begin_layout Standard
Understanding the algorithms described in this paper should require some
 basic knowledge of circuit analysis (Kirchhoff's & Ohm's laws), and algebra.
 An introductory E&M Physics course should suffice.
 
\end_layout

\begin_layout Standard
This paper presumes discrete-time math is being used.
 Therefor, bracketed notation is used to indicate time varying variables.
 For example:
\begin_inset Formula 
\[
V_{sys}[n]
\]

\end_inset


\end_layout

\begin_layout Standard
Indicates that 
\begin_inset Formula $V_{sys}$
\end_inset

 is a variable which varies over time, and we are specifically referring
 to the value of 
\begin_inset Formula $V_{sys}$
\end_inset

 at time-step 
\begin_inset Formula $n$
\end_inset

.
 Our time-step variable will start at 0 and advance by 1 each software control
 loop, always maintaining an integer value.
 In general a software loop rate of 20ms was presumed, but further discussion
 of this is beyond the scope of this paper.
\end_layout

\begin_layout Part
Current Limiting Algorithm
\end_layout

\begin_layout Standard
The Current Limiting Algorithm is responsible for establishing a maximum
 motor voltage command to each set of mechanically-linked motors.
 The amount of limiting is calculated to be as small as possible, while
 still preventing system voltage from dropping below the preset 
\begin_inset Formula $V_{sys,min}$
\end_inset

 limit.
\end_layout

\begin_layout Section
Data Sources
\end_layout

\begin_layout Standard
The key time-varying external input needed for current estimation is the
 motor's present rotational speed.
 This may be derived from an encoder attached somewhere on each side of
 the drivetrain.
 The motor's signed rotational speed at time-step 
\begin_inset Formula $n$
\end_inset

 in rad/sec can be calculated as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\omega_{m}[n]=K_{enc\_ratio}*\omega_{enc}[n]
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Here, 
\begin_inset Formula $\omega_{enc}$
\end_inset

 is the encoder's rotational speed in radians/sec at time-step 
\begin_inset Formula $n$
\end_inset

, and 
\begin_inset Formula $K_{enc\_ratio}$
\end_inset

 is the gear ratio between the motor, and the measuring point of the encoder.
 If the encoder is attached directly to the motor, 
\begin_inset Formula $K_{enc\_ratio}$
\end_inset

 is simply 1.
 If the encoder is attached on another gear, it will be something other
 than 1.
\end_layout

\begin_layout Standard
Additionally, we will need to know the voltage applied to the motor.
 This can be calculated based off the present system voltage and the software
 command to the motor.
 The software command is normalized to the range 
\begin_inset Formula $\left[-1,1\right]$
\end_inset

, where -1 means 
\begin_inset Quotes eld
\end_inset

full reverse
\begin_inset Quotes erd
\end_inset

 and 1 means 
\begin_inset Quotes eld
\end_inset

full forward
\begin_inset Quotes erd
\end_inset

.
 The present system voltage can come from a number of places: For simplicity
 it can be assumed to just be 12V.
 It could also be taken from a filtered measurement of the present system
 voltage (which will be needed anyway in part 
\begin_inset CommandInset ref
LatexCommand ref
reference "part:Battery-Parameter-Estimation"

\end_inset

).
 Finally, it could also be derived from the previous loop estimation from
 this current limiting algorithm.
 The first solution does not account for decaying battery voltage over the
 match, and the final one involves math implications beyond the scope of
 this paper.
 Therefore, for this analysis, the filtered measurement of present system
 voltage will be used.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V_{m}[n]=V_{sys}[n]*Cmd[n]
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Motor Model
\end_layout

\begin_layout Standard
The classic electrical model for a DC motor involves a two-terminal device
 circuit, where the two terminals are linked by a resistance and a variable
 voltages source in series.
 The resistance represents the electrical resistance of the motor winding
 and communicator.
 All inductive effects of the wrapped wire are ignored.
 The voltage source represents the 
\begin_inset Quotes eld
\end_inset

back-EMF
\begin_inset Quotes erd
\end_inset

 induced by the fact that a magnet is spinning with respect to a coil of
 wire.
 The current through the series circuit is proportional to the torque of
 the motor.
 The speed of the motor shaft is proportional to the back-EMF effect of
 the voltage source.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename motor_mdl.png
	width 10cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Classical model of a DC Motor
\begin_inset CommandInset label
LatexCommand label
name "fig: DC-motor-model"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
From Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig: DC-motor-model"

\end_inset

, presuming L to be zero, we can apply Kirchhoff's Voltage Law and Ohm's
 Law around the circuit to arrive at the following relationship:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
V_{m}[n]=I_{m}[n]R_{m}+V_{emf}[n]
\]

\end_inset


\end_layout

\begin_layout Standard
For 
\begin_inset Formula $V_{m}$
\end_inset

being the driving voltage of the motor, 
\begin_inset Formula $R_{m}$
\end_inset

being the resistance of the motor winding, 
\begin_inset Formula $I_{m}$
\end_inset

being the current draw of the motor, and 
\begin_inset Formula $V_{emf}$
\end_inset

 being the back-EMF from the output shaft rotation.
\end_layout

\begin_layout Standard
Re-arranging, we find the current draw from one motor on one side of the
 drivetrain is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{m}[n]=\frac{V_{m}[n]-V_{emf}[n]}{R_{m}}
\]

\end_inset


\end_layout

\begin_layout Standard
Again from the classical DC motor model, we assume that 
\begin_inset Formula $V_{emf}$
\end_inset

 is linearly proportional to the rotational speed of the motor.
 We will call this constant of proportionality 
\begin_inset Formula $K_{i}$
\end_inset

.
 This yields the final relationship 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
I_{m}[n]=\frac{V_{m}[n]-K_{i}\omega_{m}[n]}{R_{m}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We have now reduced the total current from one motor to an equation made
 up of known inputs and constant values.
\end_layout

\begin_layout Section
Determining Motor Constants
\end_layout

\begin_layout Standard
The needed motor constants are not always explicitly spelled out in a motor's
 datasheet, but stall and free-wheel currents and speeds usually are.
 We will derive the needed constants for a CIM motor as an example.
\end_layout

\begin_layout Standard
For the CIM motor, we know a few crucial facts: Stall Current is 133A, and
 Free-wheel speed is 5310 RPM while drawing 2.7A
\begin_inset Foot
status open

\begin_layout Plain Layout
See http://content.vexrobotics.com/docs/217-2000-CIM-motor-specs.pdf
\end_layout

\end_inset

.
 In both cases, the supply voltage is 12V.
 Using these relationships, we can solve for the constant parameters in
 the motor model.
 Starting with Stall condition, we know 
\begin_inset Formula $\omega_{m}=0$
\end_inset

.
 Therefor:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{m}[n]=\frac{V_{m}[n]-K_{i}\omega_{m}[n]}{R_{m}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
133=\frac{12-K_{i}*0}{R_{m}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
R_{m}=\frac{12}{133}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
R_{m}=0.0902\Omega
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Now, using this number, we plug in information for Free-Wheel Speed.
 Remember to convert RPM to rad/sec
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{m}[n]=\frac{V_{m}[n]-K_{i}\omega_{m}[n]}{R_{m}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
2.7=\frac{12-K_{i}*5310*\frac{\pi}{180}}{0.0902}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
K_{i}=0.1268
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Remember these constants are for CIM motors only.
 Different motors will need this section to be re-calculated for their parameter
s.
\end_layout

\begin_layout Section
Total Estimated Current Draw
\begin_inset CommandInset label
LatexCommand label
name "sec:Total-Estimated-Current"

\end_inset


\end_layout

\begin_layout Standard
Since all parameters of the motors are now known, we can use the speed from
 either side of the drivetrain to determine total drivetrain current draw.
 Again, note this assumes a 6-CIM tank drive setup, with subscript 
\begin_inset Formula $r$
\end_inset

 and 
\begin_inset Formula $l$
\end_inset

 indicating left and right sides of the drivetrain:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{dt}[n]=3*I_{mr}[n]+3*I_{ml}[n]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
I_{dt}[n]=3*\frac{V_{mr}[n]-K_{i}\omega_{mr}[n]}{R_{m}}+3*\frac{V_{ml}[n]-K_{i}\omega_{ml}[n]}{R_{m}}\label{eq:Idt}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Again, note this equation for total current draw produces the current at
 time-step 
\begin_inset Formula $n$
\end_inset

 using only known inputs (
\begin_inset Formula $V$
\end_inset

 and 
\begin_inset Formula $\omega$
\end_inset

) and constant parameters.
\end_layout

\begin_layout Standard
At this point, limiting could be applied based around a maximum desired
 current draw from the drivetrain.
 However, since brownouts are caused by system voltage drops, a further
 step in this algorithm is taken to estimate the system voltage drop induced
 by this current draw.
\end_layout

\begin_layout Section
Battery Model
\end_layout

\begin_layout Standard
Before continuing determining if limiting is actually needed, we must establish
 what our battery behaves like under load.
 A battery is classically characterized as an ideal voltage source in series
 with a resistor.
 As more current is drawn from the battery, the voltage drop across the
 resistance causes the output voltage of the battery to drop.
 As the battery discharges, the series resistance tends to increase, while
 the open-circuit voltage decreases slightly.
 This makes a dead battery's output voltage sag much lower when put under
 a given constant load.
 See figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig: Battery_mdl"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/battery.png
	width 10cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Classical model of a lead-acid Battery
\begin_inset CommandInset label
LatexCommand label
name "fig: Battery_mdl"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
From section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Total-Estimated-Current"

\end_inset

, we know during every control loop what the current draw from the drivetrain
 will be if we apply the driver-desired voltage to the motors at the drivetrain.
 Given this current draw 
\begin_inset Formula $I_{dt}[n]$
\end_inset

, we can then estimate the system voltage via the following equation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V_{sys}[n]=V_{oc}-R_{bat}I_{dt}[n]\label{eq:Vsys}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For 
\begin_inset Formula $V_{sys}$
\end_inset

being the system voltage at time-step 
\begin_inset Formula $n$
\end_inset

, 
\begin_inset Formula $V_{oc}$
\end_inset

being the open-circuit voltage of the battery (the ideal voltage source
 in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig: Battery_mdl"

\end_inset

), 
\begin_inset Formula $R_{bat}$
\end_inset

being the battery's internal resistance, and 
\begin_inset Formula $I_{dt}$
\end_inset

being the current draw from the robot.
 This is assumed to be drivetrain-only, all other current sinks on the robot
 are negligible.
 Note the battery's open-circuit voltage and internal resistance are considered
 constants for this part of the analysis.
 For reference, they are usually around 
\begin_inset Formula $V_{oc}=12.7$
\end_inset

 and 
\begin_inset Formula $R_{bat}=0.012\Omega$
\end_inset

 for a healthy battery.
\begin_inset Foot
status open

\begin_layout Plain Layout
See http://www.mkbattery.com/images/ES17-12.pdf for the MK model ES17-12.
\end_layout

\end_inset

 However, later in the analysis, it will be shown how to calculate them
 over time.
\end_layout

\begin_layout Section
Limiting Method
\end_layout

\begin_layout Standard
Recall the steps of the algorithm from section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Basic-Steps"

\end_inset

.
 Every step except 6 has been demonstrated already.
 The crucial task now is determining a scaling factor (which we will call
 
\begin_inset Formula $\gamma$
\end_inset

) to apply to the driver-demanded voltages.
 
\end_layout

\begin_layout Standard
Estimating the system voltage drop can be done by combining equations 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Idt"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Vsys"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V_{sys,est}[n]=V_{oc}-R_{bat}\left[3*\frac{\left|V_{ddr}[n]-K_{i}\omega_{mr}[n]\right|}{R_{m}}+3*\frac{\left|V_{ddl}[n]-K_{i}\omega_{ml}[n]\right|}{R_{m}}\right]\label{eq:Vsys_est}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For 
\begin_inset Formula $V_{sys,est}$
\end_inset

being the estimated system voltage for driver-demanded motor voltages 
\begin_inset Formula $V_{ddr}$
\end_inset

and 
\begin_inset Formula $V_{dl}$
\end_inset

.
 Note the introduction of absolute-value signs to account for the fact that
 the current direction is inverted at the motor controller, so the battery
 always sees current drawn out of it (even when going in reverse)
\begin_inset Foot
status open

\begin_layout Plain Layout
Note this is a presumption of a behavior of specific speed controllers.
 Depending on the speed controller used, your mileage may vary.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
If scaling is needed (when 
\begin_inset Formula $V_{sys,est}<V_{sys,min})$
\end_inset

, we plug in the scaled values to equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Vsys_est"

\end_inset

 and solve for the scaling value 
\begin_inset Formula $\gamma$
\end_inset

.
 Starting from equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Vsys_est"

\end_inset

 and plugging in the known values for the 
\begin_inset Quotes eld
\end_inset

scaling needed
\begin_inset Quotes erd
\end_inset

 condition:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
V_{sys,min}=V_{oc}-R_{bat}\left[3*\frac{\left|\gamma V_{ddr}[n]-K_{i}\omega_{mr}[n]\right|}{R_{m}}+3*\frac{\left|\gamma V_{ddl}[n]-K_{i}\omega_{ml}[n]\right|}{R_{m}}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
V_{oc}-V_{sys,min}=R_{bat}\left[3*\frac{\left|\gamma V_{ddr}[n]-K_{i}\omega_{mr}[n]\right|}{R_{m}}+3*\frac{\left|\gamma V_{ddl}[n]-K_{i}\omega_{ml}[n]\right|}{R_{m}}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{V_{oc}-V_{sys,min}}{3R_{bat}}=\frac{\left|\gamma V_{ddr}[n]-K_{i}\omega_{mr}[n]\right|}{R_{m}}+\frac{\left|\gamma V_{ddl}[n]-K_{i}\omega_{ml}[n]\right|}{R_{m}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{R_{m}\left(V_{oc}-V_{sys,min}\right)}{3R_{bat}}=\left|\gamma V_{ddr}[n]-K_{i}\omega_{mr}[n]\right|+\left|\gamma V_{ddl}[n]-K_{i}\omega_{ml}[n]\right|
\]

\end_inset


\end_layout

\begin_layout Standard
Due to the double absolute value symbols, we now have four possible solutions
 for 
\begin_inset Formula $\gamma$
\end_inset

.
 Doing some nifty algebra 
\begin_inset Foot
status open

\begin_layout Plain Layout
See www.wolframalpha.com
\end_layout

\end_inset

, we find all four solutions for gamma:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\gamma=\begin{cases}
\frac{-\left(\frac{R_{m}\left(V_{oc}-V_{sys,min}\right)}{3R_{bat}}\right)+\left(K_{i}\omega_{mr}[n]\right)-\left(K_{i}\omega_{ml}[n]\right)}{V_{ddr}[n]-V_{ddl}[n]}\\
\frac{\left(\frac{R_{m}\left(V_{oc}-V_{sys,min}\right)}{3R_{bat}}\right)+\left(K_{i}\omega_{mr}[n]\right)-\left(K_{i}\omega_{ml}[n]\right)}{V_{ddr}[n]-V_{ddl}[n]}\\
\frac{-\left(\frac{R_{m}\left(V_{oc}-V_{sys,min}\right)}{3R_{bat}}\right)+\left(K_{i}\omega_{mr}[n]\right)+\left(K_{i}\omega_{ml}[n]\right)}{V_{ddr}[n]+V_{ddl}[n]}\\
\frac{\left(\frac{R_{m}\left(V_{oc}-V_{sys,min}\right)}{3R_{bat}}\right)+\left(K_{i}\omega_{mr}[n]\right)+\left(K_{i}\omega_{ml}[n]\right)}{V_{ddr}[n]+V_{ddl}[n]}
\end{cases}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
All four possible values for 
\begin_inset Formula $\gamma$
\end_inset

 would be computed at run-time.
 From the four possible values, it is known that gamma can be in the range
 
\begin_inset Formula $\left[0,1\right]$
\end_inset

 since the scaling cannot exceed the physical limits of what was requested
 or is possible with the motor controllers.
 Among all the solutions which are in this range, the largest should be
 chosen (as the 
\begin_inset Formula $\gamma=1$
\end_inset

 case is where the driver-demanded voltage is honored).
 If no solution is within the 
\begin_inset Formula $[0,1]$
\end_inset

 range, default to 
\begin_inset Formula $\gamma=0$
\end_inset

.
 This assumes current cannot be back-driven through an active controller,
 and friction in the system will push the system back to steady-state with
 zero control effort.
\end_layout

\begin_layout Standard
Once a suitable 
\begin_inset Formula $\gamma$
\end_inset

 is found, the motor voltages for each motor should be applied as such:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V_{m}=\begin{cases}
V_{dd} & V_{sys,est}\geq V_{sys,min}\\
\gamma V_{dd} & V_{sys,est}<V_{sys,min}
\end{cases}
\end{equation}

\end_inset


\end_layout

\begin_layout Part
Battery Parameter Estimation Algorithm
\begin_inset CommandInset label
LatexCommand label
name "part:Battery-Parameter-Estimation"

\end_inset


\end_layout

\begin_layout Standard
Up until now, it has been assumed that the battery parameters 
\begin_inset Formula $V_{oc}$
\end_inset

 and 
\begin_inset Formula $R_{bat}$
\end_inset

.
 are constants.
 This is valid for some batteries, but will induce significant error as
 batteries discharge over a match, and age over many seasons.
 While the aforementioned numbers are good starting points, it is worthwhile
 attempting to determine these parameters on the fly, to account for different
 conditions.
 Since they are slowly-changing compared to driver inputs and motor speeds,
 the previous calculations will be unaffected (as the assumption that the
 battery parameters are 
\begin_inset Quotes eld
\end_inset

constant
\begin_inset Quotes erd
\end_inset

 is still fairly true with respect to the other time-varying signals).
 The basic estimation method will use known voltage and current values over
 multiple time-steps to calculate parameters of the simplified battery model
 presented in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig: Battery_mdl"

\end_inset

.
\end_layout

\begin_layout Section
Data Sources
\end_layout

\begin_layout Standard
The battery model has two degrees of freedom (Open-Circuit voltage and internal
 series resistance), so two sources of data are needed to fully constrain
 the system.
 Starting in 2015, a CAN-enabled Power Distribution Panel was made standard
 for FRC.
 Using the API's associated with it, it is possible to read the total current
 from the battery, and the present system voltage.
 As mentioned already, these signals are lower-bandwidth and are not the
 best for measuring sharp transient conditions.
 However, outside of extreme transients, their values can be filtered down
 to fairly accurate values for the voltage and current just at the battery's
 connection to the robot.
 
\end_layout

\begin_layout Standard
The measured current and voltage values for the system form points on the
 I-V plot for the battery.
 It should be noted that the slope of this plot represents the equivalent
 series resistance (
\begin_inset Formula $R_{bat}$
\end_inset

), and the y-intercept is the open-circuit battery voltage (
\begin_inset Formula $V_{oc}$
\end_inset

).
 See figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig: batt_est_idea"

\end_inset

.
 The basic method for determining these two desired parameters is to take
 many system current and voltage measurements, and use them to create a
 best-fit line.
 The slope and y-intercept of this best-fit line are then used to calculate
 the 
\begin_inset Formula $V_{oc}$
\end_inset

and 
\begin_inset Formula $R_{bat}$
\end_inset

parameters needed in the current-limiting algorithm.
 To get an accurate best-fit line, it is required that the current and voltage
 measurements be spread out over the I-V plane.
 In other words, a steady-state robot sitting still will not produce meaningful
 measurements.
 A changing current draw from the battery is required.
 See figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig: batEst_bad_spread"

\end_inset

 
\begin_inset Formula $R_{bat}$
\end_inset

 in particular is sensitive to steady-state error due to noise.
 While the current is changing, the estimated 
\begin_inset Formula $R_{bat}$
\end_inset

parameter can be trusted, but a sample-and-hold methodology must be used
 when it is not changing much.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename res/BatteryEstimation.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
IV curve for ideal estimation of battery parameters
\begin_inset CommandInset label
LatexCommand label
name "fig: batt_est_idea"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename res/BatteryEstimation_cloud.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
IV curve for estimation with many samples, including noise
\begin_inset CommandInset label
LatexCommand label
name "fig: batEst_good_spread"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename res/BatteryEstimation_lowSpresd.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
IV curve for many samples of similar current draw 
\begin_inset CommandInset label
LatexCommand label
name "fig: batEst_bad_spread"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Estimation Method
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig: Battery_mdl"

\end_inset

 is referenced as the model for the battery, with the measured system voltage
 and measured system current present at its output ports.
\end_layout

\begin_layout Standard
The estimation method can be summarized as follows:
\end_layout

\begin_layout Itemize
Read in the present system voltage and current.
\end_layout

\begin_layout Itemize
Average some amount of previous data to help reject noise in the measurement.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Simulated experiments showed 300ms of data averaging was a good starting
 point.
 Make the length of the averaging tunable, and adjust to taste on the actual
 robot.
\end_layout

\begin_deeper
\begin_layout Itemize
At 10ms, this equates to the past 30 samples.
\end_layout

\end_deeper
\begin_layout Itemize
This will generate two filtered signals - one for the system current, one
 for the system voltage.
\end_layout

\end_deeper
\begin_layout Itemize
Consider a window of the filtered data stretching from the present into
 the past for a given length of time.
\end_layout

\begin_deeper
\begin_layout Itemize
Simulated experiments showed 1000ms for a window length worked well.
\end_layout

\end_deeper
\begin_layout Itemize
Estimate the equivalent series resistance of the battery from this window
 of samples.
\end_layout

\begin_deeper
\begin_layout Itemize
See section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Calculation-using-Least"

\end_inset

 for the algorithm.
\end_layout

\end_deeper
\begin_layout Itemize
Calculate the spread of current draw readings in the window under consideration.
\end_layout

\begin_deeper
\begin_layout Itemize
Here, we define spread as the standard deviation of the points within the
 window.
\end_layout

\end_deeper
\begin_layout Itemize
If the spread is above a constant, tunable threshold, use the estimated
 
\begin_inset Formula $R_{bat}$
\end_inset

 in all other calculations, assuming it to be correct.
\end_layout

\begin_deeper
\begin_layout Itemize
Additionally, if this is the biggest spread seen since the last time spread
 went above the threshold, record the spread and 
\begin_inset Formula $R_{bat}$
\end_inset

 values for later use.
\end_layout

\end_deeper
\begin_layout Itemize
If the Spread is below the threshold, use the previous best-spread 
\begin_inset Formula $R_{bat}$
\end_inset

.
 (sample and hold most-confident value).
\end_layout

\begin_deeper
\begin_layout Itemize
Reset the 
\begin_inset Quotes eld
\end_inset

largest spread
\begin_inset Quotes erd
\end_inset

 threshold to zero as well in prep for the next time spread goes above the
 threshold.
\end_layout

\end_deeper
\begin_layout Standard
The results of such an algorithm can be seen in the provided figures: Note
 that when confidence goes to 
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

, the percent error goes to nearly zero and the estimated 
\begin_inset Formula $R_{bat}$
\end_inset

 
\begin_inset Quotes eld
\end_inset

catches up
\begin_inset Quotes erd
\end_inset

 with the actual one.
 When information is sparse in-between large current draw changes, the best
 last known-good value for 
\begin_inset Formula $R_{bat}$
\end_inset

 is held.
 This is a reasonable approximation, as percent error stays mostly below
 10% for both 
\begin_inset Formula $R_{bat}$
\end_inset

 and 
\begin_inset Formula $V_{oc}$
\end_inset

.
 The figures illustrate the algorithm working in the presence of noise in
 the readings for system voltage and current.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/Pulsed_motor_perf/Act-Est-Voc-ESR-for_given_load.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/Pulsed_motor_perf/Pct_Err_conf.png
	width 15cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Performance of Algorithm on a pulsed-current-draw waveform with a discharging
 battery 
\begin_inset CommandInset label
LatexCommand label
name "fig: pulsed-motor-perf"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/sin_load_perf/Act-Est-Voc-ESR-for_given_load.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/sin_load_perf/Pct_Err_conf.png
	width 15cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Performance of Algorithm on a sine waveform current draw with a discharging
 battery 
\begin_inset CommandInset label
LatexCommand label
name "fig: sin-wav-I-draw"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Calculations
\end_layout

\begin_layout Subsubsection
Averaging Filters
\end_layout

\begin_layout Standard
The algorithm refers to utilizing an averaging filter to eliminate some
 of the noise from the measured input 
\begin_inset Formula $I_{sys}$
\end_inset

and 
\begin_inset Formula $V_{sys}$
\end_inset

readings.
 An averaging filter has one input and one output - the output is always
 equal to the average (or arithmetic mean) of the last 
\begin_inset Formula $N$
\end_inset

 inputs, where 
\begin_inset Formula $N$
\end_inset

 is said to be the 
\begin_inset Quotes eld
\end_inset

length
\begin_inset Quotes erd
\end_inset

 of the filter.
 For example, on the system voltage,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
V_{sys}[n]=\frac{\stackrel[{\scriptstyle i=0}]{{\scriptstyle N-1}}{\sum}V_{meas}[n-i]}{N}
\]

\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $V_{sys}$
\end_inset

ends up being the filtered voltage value at time 
\begin_inset Formula $n$
\end_inset

, and 
\begin_inset Formula $V_{meas}$
\end_inset

is the voltage value read from the PDB sensor via a function call in software.
 
\begin_inset Formula $N$
\end_inset

's value can be determined by the length of averaging needed and the sample
 time.
 If it is desired to average 2 seconds of data, and the sample time is 10
 ms, you will need 200 points (
\begin_inset Formula $N=2/Ts=200$
\end_inset

).
\end_layout

\begin_layout Standard
Use averaging filters on both the read-in system current and voltage.
 It may also be used on the 
\begin_inset Formula $R_{bat}$
\end_inset

 calculated.
\end_layout

\begin_layout Subsubsection
\begin_inset Formula $R_{bat}$
\end_inset

Calculation using Least-Squares on a Set of Points
\begin_inset CommandInset label
LatexCommand label
name "sub:Calculation-using-Least"

\end_inset


\end_layout

\begin_layout Standard
This algorithm was developed from a CSCI230 webpage owned by professor Harry
 Hutchins, originally from http://faculty.cs.niu.edu/~hutchins/csci230/best-fit.htm.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
If that link is down, we saved a copy of the website along with the source
 code for this paper.
 Check Team 1736's Github repos, or contact the paper's authors for more
 info.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The algorithm used to calculate 
\begin_inset Formula $R_{bat}$
\end_inset

from a window of current and voltage measurement points is based on the
 
\begin_inset Quotes eld
\end_inset

Least-Squares
\begin_inset Quotes erd
\end_inset

 algorithm.
 It seeks to define a line with a slope such that the distance from the
 line to any point in the set is as small as possible.
 The algorithm is derived by first defining this 
\begin_inset Quotes eld
\end_inset

best fit
\begin_inset Quotes erd
\end_inset

 condition mathematically, and then working backward to the line equation.
 That proof is not covered in this paper.
 Instead, the final algorithm is presented.
\end_layout

\begin_layout Standard
Define first 
\begin_inset Formula $N_{lms}$
\end_inset

to be the number of points in the window of I-V readings to consider.
 This is referred to as the 
\begin_inset Quotes eld
\end_inset

window size
\begin_inset Quotes erd
\end_inset

, and is numerically the same as the number of current-voltage pairs plotted
 on the I-V graph from which we will attempt to apply a best-fit line.
\end_layout

\begin_layout Standard
Define a few more variables:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
S_{v}[n]=\stackrel[{\scriptstyle i=0}]{{\scriptstyle N_{lms}-1}}{\sum}V_{sys}[n-i]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
S_{I}[n]=\stackrel[{\scriptstyle i=0}]{{\scriptstyle N_{lms}-1}}{\sum}I_{sys}[n-i]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
S_{IV}[n]=\stackrel[{\scriptstyle i=0}]{{\scriptstyle N_{lms}-1}}{\sum}\left(I_{sys}[n-i]*V_{sys}[n-i]\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
S_{I^{2}}[n]=\stackrel[{\scriptstyle i=0}]{{\scriptstyle N_{lms}-1}}{\sum}\left(I_{sys}[n-i]^{2}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{V}[n]=\frac{S_{V}}{N_{lms}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{I}[n]=\frac{S_{I}}{N_{lms}}
\]

\end_inset


\end_layout

\begin_layout Standard
Then, using these variables, the ESR estimate for timestep 
\begin_inset Formula $n$
\end_inset

 may be calculated:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
R_{bat}[n]=-\frac{S_{IV}[n]-\left(S_{I}[n]*\bar{V}[n]\right)}{S_{I^{2}}[n]-\left(S_{I}[n]*\bar{I}[n]\right)}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Confidence Calculation and Filtering
\end_layout

\begin_layout Standard
As stated, the confidence we have in the estimated 
\begin_inset Formula $R_{bat}[n]$
\end_inset

 is based off of the standard deviation of the set of current measurements
 within the window being considered.
 For reference, this standard deviation (or 
\begin_inset Quotes eld
\end_inset

spread
\begin_inset Quotes erd
\end_inset

) is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sigma_{conf}[n]=\sqrt{\frac{1}{N_{lms}}\stackrel[{\scriptstyle i=0}]{{\scriptstyle N_{lms}-1}}{\sum}\left(\left(I_{sys}[n-i]-\bar{I}[n]\right)^{2}\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
A tunable constant 
\begin_inset Formula $\sigma_{min}$
\end_inset

determines the minimum spread needed before the 
\begin_inset Formula $R_{bat}$
\end_inset

 estimation is trusted.
 If 
\begin_inset Formula $\sigma_{conf}[n]$
\end_inset

 is larger than the minimum, use 
\begin_inset Formula $R_{bat}[n]$
\end_inset

.
 Otherwise, re-assign 
\begin_inset Formula $R_{bat}[n]$
\end_inset

 to the value during the highest-
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\sigma_{conf}[n]$
\end_inset

 loop during the most recent period of trustable-
\begin_inset Formula $R_{bat}$
\end_inset

numbers.
 A snippet of GNU Octave code is provided illustrating this logic:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Matlab,breaklines=true"
inline false
status open

\begin_layout Plain Layout

% If the spread is above a tuned minimum threshold, we may use this window
     
\end_layout

\begin_layout Plain Layout

% for the R_bat calculation.
     
\end_layout

\begin_layout Plain Layout

if(spread > min_spread_thresh_A)         
\end_layout

\begin_layout Plain Layout

	confidence(i) = 1;      
\end_layout

\begin_layout Plain Layout

	% Additionally, if this is the larges spreaad we've seen so far,      
   
\end_layout

\begin_layout Plain Layout

	% save the R_bat value for when the spread is no longer 
\end_layout

\begin_layout Plain Layout

	% big enough to trust the calculation.
         
\end_layout

\begin_layout Plain Layout

	if(spread > prev_best_spread)             
\end_layout

\begin_layout Plain Layout

		prev_best_spread = spread;             
\end_layout

\begin_layout Plain Layout

		prev_best_R_bat = R_bat_est_raw(i);         
\end_layout

\begin_layout Plain Layout

	end     
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

else         
\end_layout

\begin_layout Plain Layout

	%When the spread isn't big enough, we don't trust our calculation     
    
\end_layout

\begin_layout Plain Layout

	% We also reset the "best spread" to zero since we are no longer in a 
        
\end_layout

\begin_layout Plain Layout

	% "confidence = 1" region.
         
\end_layout

\begin_layout Plain Layout

	confidence(i) = 0;
\end_layout

\begin_layout Plain Layout

	prev_best_spread = 0;     
\end_layout

\begin_layout Plain Layout

end                  
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%If we didnt' trust this window's calculation, use the previous best calculation
     
\end_layout

\begin_layout Plain Layout

if(confidence(i) == 0)       
\end_layout

\begin_layout Plain Layout

	R_bat_est_raw(i) = prev_best_R_bat;     
\end_layout

\begin_layout Plain Layout

end  
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset Formula $V_{oc}$
\end_inset

 Calculation
\end_layout

\begin_layout Standard
Regardless of whether the 
\begin_inset Formula $R_{bat}$
\end_inset

 calculation was trusted or not, the open-circuit voltage can always be
 calculated via this formula:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
V_{oc}[n]=\bar{V}[n]+R_{bat}[n]*\bar{I}[n]
\]

\end_inset


\end_layout

\begin_layout Section
Usage of Estimated Parameters
\end_layout

\begin_layout Standard
The two battery parameters have just been estimated from measured system
 voltage and current values.
 This calculation should be done as part of the first step of the limiting
 algorithm.
 The determined numbers for the open-circuit voltage and internal resistance
 of the battery may then be used in the other calculations.
\end_layout

\begin_layout Part
Implementation
\end_layout

\begin_layout Section
\begin_inset Quotes eld
\end_inset

Real World
\begin_inset Quotes erd
\end_inset

 Considerations
\end_layout

\begin_layout Standard
In this section, we will cover a handful of the implementation details that
 were discovered while putting this current limiting algorithm onto FRC
 Team 1736's 2016 robot.
\end_layout

\begin_layout Standard
We had a shifter drivetrain with two possible ratios between wheel speed
 and motor speed.
 Since the encoders measured speed at the output of the gearboxes, we had
 to add logic to account for the fact the motor speed to encoder speed ratio
 (
\begin_inset Formula $K_{enc\_ratio}$
\end_inset

) changed.
\end_layout

\begin_layout Standard
The equations presented above are in a verbose form to demonstrate their
 physical meaning.
 Simplifying them is very possible to reduce the number of computations
 done at run-time.
\end_layout

\begin_layout Standard
Additional voltage drops and resistances may need to be added to model the
 losses in the wires and motor controllers.
 For example, we found a fresh battery, including wiring, connectors, and
 circuit breaker, had closer to 0.025 ohms of series resistance.
 Or motors also exhibited an extra 0.051 ohms of resistance in wiring and
 connectors which we accounted for.
\end_layout

\begin_layout Standard
Filtering the input voltage and current properly for battery estimation
 was fairly tricky (especially to avoid time-delay).
 A filter length of 5 (at 20ms sample rate) provided a good trade-off between
 delay and noise rejection.
 Post-filtering 
\begin_inset Formula $R_{bat}$
\end_inset

 also helped make the reading more accurate - the post-filter operation
 was done with a 20-point averaging filter (again at a 20ms rate).
\end_layout

\begin_layout Standard
It has been mentioned that the algorithm for estimating battery parameters
 should sample-and-hold the 
\begin_inset Formula $R_{bat}$
\end_inset

 when the spread of drawn current is too small.
 We experimentally found that sampling new 
\begin_inset Formula $R_{bat}$
\end_inset

 only when the standard deviation of the measured current went above 7A
 provided good noise rejection.
\end_layout

\begin_layout Standard
The calculations presume that a certain voltage can be commanded to the
 motors with good precision.
 For some motor controllers, a linearization & 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $V_{sys}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 compensation step may be needed to ensure that when a certain voltage is
 commanded in software, that voltage actually ends up at the speed controller
 output.
\end_layout

\begin_layout Standard
Empirical measurements could help provide a better guess of starting open-circui
t voltage for the battery than simply guessing somewhere between 12 and
 13.
\end_layout

\begin_layout Standard
It is highly recommended to keep a log of pertinent internal information.
 Included in this is the measured system voltage and current, estimated
 system voltage and drivetrain currents, the estimated battery parameters,
 the utilized scaling factor 
\begin_inset Formula $\gamma$
\end_inset

, as well as the driver-demanded and commanded voltages.
 These logs can be used to validate proper software behavior, and diagnose
 erratic motions.
 Additionally, any times when limiting was applied can be used to show why
 exactly the algorithm was needed.
\end_layout

\begin_layout Standard
A complete solution for scaling factor 
\begin_inset Formula $\gamma$
\end_inset

 was provided in this paper.
 However, on the actual robot, we opted instead to utilize an iterative
 solver.
 When the estimated system voltage for certain driver commands was sensed
 to be too low, the solver would iterate over smaller and smaller values
 of 
\begin_inset Formula $\gamma$
\end_inset

 until a suitable one was found.
\end_layout

\begin_layout Standard
Finally, it is to be noted that this algorithm will necessarily reduce the
 apparent responsiveness of the drivetrain.
 Hopefully the 6-CIM drive is powerful enough that the reduction from this
 algorithm will not be missed.
 However, it is ideal to have it in place well before the drive team begins
 practice, as adding it partway in may be perceived as an undesired limitation.
 In our implementation experience, the downgrade in performance was negligible
 to the drivability of the robot.
\end_layout

\begin_layout Section
Future Experiments
\end_layout

\begin_layout Standard
While reviewing this paper, there were many alternate implementations suggested
 and considered.
 Not all experiments have been completed yet.
 However, we will detail some of the future-work suggestions we are considering.
\end_layout

\begin_layout Standard
When the spread of current draw is too low to derive good data about the
 battery, we used sample-and-hold on 
\begin_inset Formula $R_{bat}$
\end_inset

 .
 However, one of our paper reviewers suggested that at timestep n, we sample-and
-hold the most recent 
\begin_inset Formula $V_{oc}$
\end_inset

 and calculate 
\begin_inset Formula $R_{bat}$
\end_inset

 as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
R_{bat}[n]=\frac{V_{oc}-V_{sys}[n]}{I_{sys}[n]}
\]

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $V_{oc}$
\end_inset

 changes more slowly than 
\begin_inset Formula $R_{bat}$
\end_inset

 over a given time period, this may be a better approach.
 However, data link delays and noise in 
\begin_inset Formula $V_{sys}$
\end_inset

 and 
\begin_inset Formula $I_{sys}$
\end_inset

 may also skew the calculation unacceptably.
 Experimentation with this variation is still a to-do for our team.
\end_layout

\begin_layout Standard
Some speed controllers have built-in control modes for limiting or servoing
 to specific current outputs (ex: the Talon SRX).
 We have not yet tested these modes, but it could be possible to utilize
 them, either as the primary limiting mechanism or as an additional protection
 mechanism.
 Still, the battery parameter estimation would be useful for determining
 the maximum theoretical current draw for the battery (which should change
 over the course of a normal FRC match).
\end_layout

\begin_layout Standard
For robots with air compressors on-board, the current draw of this device
 may be important.
 We haven't considered it yet.
 However, most compressors do publish a table of pressure vs.
 current draw.
 If you are measuring analog pressure in your system, you could do a simple
 lookup to predict what the compressor current draw would be if you were
 to turn it on right now.
 This knowledge could be used as part of the limiting strategy to determine
 if it would be allowable to turn on the compressor right now.
 More complex algorithms could prioritize sending power to certain motors
 or the compressor, based on what is most important for the robot's present
 state.
\end_layout

\begin_layout Standard
The limiting-factor calculations presume the user control input to the algorithm
 is a desired voltage to the motor (or, at least, percent of 
\begin_inset Formula $V_{sys}$
\end_inset

 to apply to the motor).
 Desired motor speed is another common input.
 There is some potential to utilize motor-torque calculations to determine
 the maximum loop-to-loop delta in motor speed which is electrically possible.
 However, this would require knowing the impact of a given motor torque
 on motor rotational speed, which in turn requires knowledge of the weight,
 physical configuration, and parasitic loads in the robot.
\begin_inset Foot
status open

\begin_layout Plain Layout
Battery Parameters and a 
\begin_inset Formula $V_{sys,min}$
\end_inset

 yield a maximum 
\begin_inset Formula $I_{sys}$
\end_inset

.
 Maximum 
\begin_inset Formula $I_{sys}$
\end_inset

 yields a maximum 
\begin_inset Formula $I_{m}$
\end_inset

for each motor.
 Powering the motor at 
\begin_inset Formula $I_{m,max}$
\end_inset

 produces a maximum theoretical torque at the motor shaft.
 This torque, transfered through the (presumed massless) gearboxes & wheels
 and adjusted for friction and other parasitic loads, produces a force on
 the robot's mass.
 This causes the robot to accelerate.
 The physical motion of the robot transfers back through the wheels & gearboxes
 to the motors, yeilding a motor rotational velocity, all presuming the
 wheels do not slip.
 This is a 
\emph on
very 
\emph default
theoretical calculation.
\end_layout

\end_inset

 Given these extra needs, we do not believe this is a nice path to go down,
 however the thought experiment has yet to be fully fleshed out.
 
\end_layout

\begin_layout Part
Results
\end_layout

\begin_layout Section
Experimental
\end_layout

\begin_layout Standard
After the 2016 season, we evaluated some of the properties of the robot.
 We never experienced a brownout during any match or during normal practice.
 Additionally, we ran a series of experiments to determine the full effectivenes
s of the system on a real robot.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/results.png
	width 15cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Results of running the limiting algorithm (
\begin_inset Formula $V_{sys,min}=7.5V$
\end_inset

) 
\begin_inset CommandInset label
LatexCommand label
name "fig: results"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The most telling of these experiments was run as follows:
\end_layout

\begin_layout Enumerate
Put a fully-charged, older (~2014) battery into the robot
\end_layout

\begin_layout Enumerate
Disable the motor command limiter
\end_layout

\begin_layout Enumerate
Run the robot hard until brownouts start to occur (about a minute and a
 half)
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Hard
\begin_inset Quotes erd
\end_inset

 means forward/reverse cycles at full speed
\end_layout

\end_deeper
\begin_layout Enumerate
Stop and enable the current limiting algorithm
\end_layout

\begin_layout Enumerate
Observe brownouts cease for at least 30 seconds
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig: results"

\end_inset

 shows our results from this experiment.
 System voltage remains above a threshold as soon as limiting is applied,
 and brownouts cease.
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
We have shown an algorithm which limits motor commands based around a minimum
 system voltage criteria, utilizing physical models of batteries and motors.
 It provides a 
\begin_inset Quotes eld
\end_inset

next-level
\begin_inset Quotes erd
\end_inset

 approach to solving brownout issues which can hinder FRC robot performance.
 The reader should note that many simpler methods exist, and simpler methods
 will suffice in many cases.
 However, at a minimum, this method drives a deeper understanding of how
 the electronic components of the robot interact.
\end_layout

\begin_layout Section
Special Thanks
\end_layout

\begin_layout Standard
We would like to thank a few individuals and organizations who were instrumental
 in the development of this algorithm:
\end_layout

\begin_layout Standard
Aaron and Daniel from 1736 for their help developing & implementing the
 ideas in this paper, and presenting the content for judging.
\end_layout

\begin_layout Standard
Thanks to Larry, Thomas, Olivia, Jack, and Steven from 1736 and Ether from
 Chief Delphi for your valuable and detailed feedback on the content of
 this paper.
\end_layout

\begin_layout Standard
Special thanks to our sponsors, Caterpillar Inc.
 , PTC, and the Peoria Police Benevolent Association - without your support,
 none of this is possible.
\end_layout

\end_body
\end_document
